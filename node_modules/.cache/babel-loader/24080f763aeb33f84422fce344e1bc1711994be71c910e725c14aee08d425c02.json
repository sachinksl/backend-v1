{"ast":null,"code":"var _jsxFileName = \"/Users/sachinkansal/seller-disclosure-portal/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\n\n// (Add other imports, e.g., DisclosureFlow if you have it)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [progress, setProgress] = useState({\n    completed: 1,\n    total: 3\n  });\n  const handleLogin = userData => setUser(userData);\n  const handleStartDisclosure = () => {\n    alert(\"Starting or continuing disclosure flow...\");\n    // You can later extend this to route to your disclosure form or AI chat\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: !user ? /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n        progress: progress,\n        onStartDisclosure: handleStartDisclosure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard\",\n      element: /*#__PURE__*/_jsxDEV(Dashboard, {\n        progress: {\n          completed: 1,\n          total: 3\n        },\n        onStartDisclosure: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pLjY0QVUIjso4JeixQ3TJILhe0k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","Login","Dashboard","jsxDEV","_jsxDEV","App","_s","user","setUser","progress","setProgress","completed","total","handleLogin","userData","handleStartDisclosure","alert","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onStartDisclosure","_c","$RefreshReg$"],"sources":["/Users/sachinkansal/seller-disclosure-portal/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\n\n\n// (Add other imports, e.g., DisclosureFlow if you have it)\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [progress, setProgress] = useState({ completed: 1, total: 3 });\n\n  const handleLogin = (userData) => setUser(userData);\n  const handleStartDisclosure = () => {\n    alert(\"Starting or continuing disclosure flow...\");\n    // You can later extend this to route to your disclosure form or AI chat\n  };\n\n\n  return (\n    <Routes>\n      <Route \n        path=\"/\" \n        element={\n          !user ? \n          <Login onLogin={handleLogin} /> : \n          <Dashboard progress={progress} onStartDisclosure={handleStartDisclosure} />\n        } \n      />\n      <Route path=\"/login\" element={<Login onLogin={setUser} />} />\n      <Route path=\"/dashboard\" element={<Dashboard progress={{completed: 1, total: 3}} onStartDisclosure={() => {}} />} />\n     \n      </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;;AAG9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,SAAS,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EAEpE,MAAMC,WAAW,GAAIC,QAAQ,IAAKN,OAAO,CAACM,QAAQ,CAAC;EACnD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClCC,KAAK,CAAC,2CAA2C,CAAC;IAClD;EACF,CAAC;EAGD,oBACEZ,OAAA,CAACL,MAAM;IAAAkB,QAAA,gBACLb,OAAA,CAACJ,KAAK;MACJkB,IAAI,EAAC,GAAG;MACRC,OAAO,EACL,CAACZ,IAAI,gBACLH,OAAA,CAACH,KAAK;QAACmB,OAAO,EAAEP;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAC/BpB,OAAA,CAACF,SAAS;QAACO,QAAQ,EAAEA,QAAS;QAACgB,iBAAiB,EAAEV;MAAsB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC3E;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACFpB,OAAA,CAACJ,KAAK;MAACkB,IAAI,EAAC,QAAQ;MAACC,OAAO,eAAEf,OAAA,CAACH,KAAK;QAACmB,OAAO,EAAEZ;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DpB,OAAA,CAACJ,KAAK;MAACkB,IAAI,EAAC,YAAY;MAACC,OAAO,eAAEf,OAAA,CAACF,SAAS;QAACO,QAAQ,EAAE;UAACE,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAC,CAAE;QAACa,iBAAiB,EAAEA,CAAA,KAAM,CAAC;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5G,CAAC;AAEf;AAAClB,EAAA,CA1BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}