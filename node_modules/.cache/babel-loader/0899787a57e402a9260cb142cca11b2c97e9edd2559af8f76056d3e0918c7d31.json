{"ast":null,"code":"// src/api.js\nexport async function sendPromptToAI(prompt) {\n  try {\n    const response = await fetch('/api/disclosure/ai', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        prompt\n      })\n    });\n    if (!response.ok) throw new Error('AI response failed');\n    const data = await response.json();\n    return data.reply; // backend now returns { reply }\n  } catch (error) {\n    console.error(error);\n    return \"Sorry, I'm having trouble responding right now.\";\n  }\n}\nexport async function fetchProgress(token) {\n  try {\n    // Token not required by backend; keep header only if you want it later\n    const response = await fetch('/api/disclosure/progress', {\n      credentials: 'include',\n      headers: token ? {\n        Authorization: `Bearer ${token}`\n      } : {}\n    });\n    if (!response.ok) throw new Error('Progress fetch failed');\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    return {\n      completed: 0,\n      total: 3\n    };\n  }\n}\nexport async function listProperties() {\n  const r = await fetch('/api/properties', {\n    credentials: 'include'\n  });\n  if (!r.ok) throw new Error('listProperties failed');\n  return r.json();\n}\nexport async function getProperty(id) {\n  const r = await fetch(`/api/properties/${id}`, {\n    credentials: 'include'\n  });\n  if (!r.ok) throw new Error('getProperty failed');\n  return r.json();\n}\nexport async function createProperty(payload) {\n  const r = await fetch('/api/properties', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(payload)\n  });\n  const text = await r.text();\n  if (!r.ok) {\n    console.error('createProperty failed', r.status, text);\n    throw new Error('createProperty failed');\n  }\n  return JSON.parse(text);\n}\nexport async function listDocuments(propertyId) {\n  const r = await fetch(`/api/properties/${propertyId}/documents`, {\n    credentials: 'include'\n  });\n  if (!r.ok) throw new Error('listDocuments failed');\n  return r.json();\n}\nexport async function presignUpload(propertyId, {\n  filename,\n  kind\n}) {\n  const r = await fetch(`/api/properties/${propertyId}/documents/presign`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({\n      filename,\n      kind\n    })\n  });\n  if (!r.ok) throw new Error('presignUpload failed');\n  return r.json(); // { uploadUrl, key, contentType }\n}\nexport async function completeUpload(propertyId, {\n  key,\n  filename,\n  kind,\n  sha256\n}) {\n  const r = await fetch(`/api/properties/${propertyId}/documents/complete`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({\n      key,\n      filename,\n      kind,\n      sha256\n    })\n  });\n  if (!r.ok) throw new Error('completeUpload failed');\n  return r.json();\n}\nexport async function getDashboardSummary() {\n  const r = await fetch('/api/dashboard/summary', {\n    credentials: 'include'\n  });\n  if (!r.ok) throw new Error('dashboard summary failed');\n  return r.json(); // { properties:[...], totals:{completed,total} }\n}","map":{"version":3,"names":["sendPromptToAI","prompt","response","fetch","method","headers","credentials","body","JSON","stringify","ok","Error","data","json","reply","error","console","fetchProgress","token","Authorization","completed","total","listProperties","r","getProperty","id","createProperty","payload","text","status","parse","listDocuments","propertyId","presignUpload","filename","kind","completeUpload","key","sha256","getDashboardSummary"],"sources":["/Users/sachinkansal/seller-disclosure-portal/src/api.js"],"sourcesContent":["// src/api.js\nexport async function sendPromptToAI(prompt) {\n  try {\n    const response = await fetch('/api/disclosure/ai', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'include',  \n      body: JSON.stringify({ prompt })\n    });\n    if (!response.ok) throw new Error('AI response failed');\n    const data = await response.json();\n    return data.reply; // backend now returns { reply }\n  } catch (error) {\n    console.error(error);\n    return \"Sorry, I'm having trouble responding right now.\";\n  }\n}\n\nexport async function fetchProgress(token) {\n  try {\n    // Token not required by backend; keep header only if you want it later\n    const response = await fetch('/api/disclosure/progress', {\n      credentials: 'include',  \n      headers: token ? { Authorization: `Bearer ${token}` } : {}\n    });\n    if (!response.ok) throw new Error('Progress fetch failed');\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    return { completed: 0, total: 3 };\n  }\n}\n\n\nexport async function listProperties() {\n  const r = await fetch('/api/properties', { credentials: 'include' });\n  if (!r.ok) throw new Error('listProperties failed');\n  return r.json();\n}\n\nexport async function getProperty(id) {\n  const r = await fetch(`/api/properties/${id}`, { credentials: 'include' });\n  if (!r.ok) throw new Error('getProperty failed');\n  return r.json();\n}\n\nexport async function createProperty(payload) {\n  const r = await fetch('/api/properties', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(payload),\n  });\n\n  const text = await r.text();\n  if (!r.ok) {\n    console.error('createProperty failed', r.status, text);\n    throw new Error('createProperty failed');\n  }\n  return JSON.parse(text);\n\n}\n\n\nexport async function listDocuments(propertyId) {\n  const r = await fetch(`/api/properties/${propertyId}/documents`, { credentials: 'include' });\n  if (!r.ok) throw new Error('listDocuments failed');\n  return r.json();\n}\n\nexport async function presignUpload(propertyId, { filename, kind }) {\n  const r = await fetch(`/api/properties/${propertyId}/documents/presign`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify({ filename, kind }),\n  });\n  if (!r.ok) throw new Error('presignUpload failed');\n  return r.json(); // { uploadUrl, key, contentType }\n}\n\nexport async function completeUpload(propertyId, { key, filename, kind, sha256 }) {\n  const r = await fetch(`/api/properties/${propertyId}/documents/complete`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify({ key, filename, kind, sha256 }),\n  });\n  if (!r.ok) throw new Error('completeUpload failed');\n  return r.json();\n}\n\nexport async function getDashboardSummary() {\n  const r = await fetch('/api/dashboard/summary', { credentials: 'include' });\n  if (!r.ok) throw new Error('dashboard summary failed');\n  return r.json(); // { properties:[...], totals:{completed,total} }\n}\n\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,cAAcA,CAACC,MAAM,EAAE;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;MACjDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER;MAAO,CAAC;IACjC,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvD,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,KAAK,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,iDAAiD;EAC1D;AACF;AAEA,OAAO,eAAeE,aAAaA,CAACC,KAAK,EAAE;EACzC,IAAI;IACF;IACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0B,EAAE;MACvDG,WAAW,EAAE,SAAS;MACtBD,OAAO,EAAEa,KAAK,GAAG;QAAEC,aAAa,EAAE,UAAUD,KAAK;MAAG,CAAC,GAAG,CAAC;IAC3D,CAAC,CAAC;IACF,IAAI,CAAChB,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAO,MAAMT,QAAQ,CAACW,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO;MAAEK,SAAS,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC;EACnC;AACF;AAGA,OAAO,eAAeC,cAAcA,CAAA,EAAG;EACrC,MAAMC,CAAC,GAAG,MAAMpB,KAAK,CAAC,iBAAiB,EAAE;IAAEG,WAAW,EAAE;EAAU,CAAC,CAAC;EACpE,IAAI,CAACiB,CAAC,CAACb,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACnD,OAAOY,CAAC,CAACV,IAAI,CAAC,CAAC;AACjB;AAEA,OAAO,eAAeW,WAAWA,CAACC,EAAE,EAAE;EACpC,MAAMF,CAAC,GAAG,MAAMpB,KAAK,CAAC,mBAAmBsB,EAAE,EAAE,EAAE;IAAEnB,WAAW,EAAE;EAAU,CAAC,CAAC;EAC1E,IAAI,CAACiB,CAAC,CAACb,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EAChD,OAAOY,CAAC,CAACV,IAAI,CAAC,CAAC;AACjB;AAEA,OAAO,eAAea,cAAcA,CAACC,OAAO,EAAE;EAC5C,MAAMJ,CAAC,GAAG,MAAMpB,KAAK,CAAC,iBAAiB,EAAE;IACvCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACkB,OAAO;EAC9B,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAML,CAAC,CAACK,IAAI,CAAC,CAAC;EAC3B,IAAI,CAACL,CAAC,CAACb,EAAE,EAAE;IACTM,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEQ,CAAC,CAACM,MAAM,EAAED,IAAI,CAAC;IACtD,MAAM,IAAIjB,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAOH,IAAI,CAACsB,KAAK,CAACF,IAAI,CAAC;AAEzB;AAGA,OAAO,eAAeG,aAAaA,CAACC,UAAU,EAAE;EAC9C,MAAMT,CAAC,GAAG,MAAMpB,KAAK,CAAC,mBAAmB6B,UAAU,YAAY,EAAE;IAAE1B,WAAW,EAAE;EAAU,CAAC,CAAC;EAC5F,IAAI,CAACiB,CAAC,CAACb,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EAClD,OAAOY,CAAC,CAACV,IAAI,CAAC,CAAC;AACjB;AAEA,OAAO,eAAeoB,aAAaA,CAACD,UAAU,EAAE;EAAEE,QAAQ;EAAEC;AAAK,CAAC,EAAE;EAClE,MAAMZ,CAAC,GAAG,MAAMpB,KAAK,CAAC,mBAAmB6B,UAAU,oBAAoB,EAAE;IACvE5B,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEyB,QAAQ;MAAEC;IAAK,CAAC;EACzC,CAAC,CAAC;EACF,IAAI,CAACZ,CAAC,CAACb,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EAClD,OAAOY,CAAC,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeuB,cAAcA,CAACJ,UAAU,EAAE;EAAEK,GAAG;EAAEH,QAAQ;EAAEC,IAAI;EAAEG;AAAO,CAAC,EAAE;EAChF,MAAMf,CAAC,GAAG,MAAMpB,KAAK,CAAC,mBAAmB6B,UAAU,qBAAqB,EAAE;IACxE5B,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAE4B,GAAG;MAAEH,QAAQ;MAAEC,IAAI;MAAEG;IAAO,CAAC;EACtD,CAAC,CAAC;EACF,IAAI,CAACf,CAAC,CAACb,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACnD,OAAOY,CAAC,CAACV,IAAI,CAAC,CAAC;AACjB;AAEA,OAAO,eAAe0B,mBAAmBA,CAAA,EAAG;EAC1C,MAAMhB,CAAC,GAAG,MAAMpB,KAAK,CAAC,wBAAwB,EAAE;IAAEG,WAAW,EAAE;EAAU,CAAC,CAAC;EAC3E,IAAI,CAACiB,CAAC,CAACb,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACtD,OAAOY,CAAC,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}