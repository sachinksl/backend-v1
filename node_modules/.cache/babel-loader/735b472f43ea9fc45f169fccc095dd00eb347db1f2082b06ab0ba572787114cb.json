{"ast":null,"code":"// src/api.js\nexport async function sendPromptToAI(prompt) {\n  try {\n    const response = await fetch('http://localhost:6000/api/disclosure/ai', {\n      // backend URL\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt\n      })\n    });\n    if (!response.ok) throw new Error('AI response failed');\n    const data = await response.json();\n    return data.reply;\n  } catch (error) {\n    console.error(error);\n    return \"Sorry, I'm having trouble responding right now.\";\n  }\n}\nexport async function fetchProgress(token) {\n  try {\n    const response = await fetch('http://localhost:6000/api/disclosure/progress', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) throw new Error('Progress fetch failed');\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    return {\n      completed: 0,\n      total: 3\n    };\n  }\n}","map":{"version":3,"names":["sendPromptToAI","prompt","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","reply","error","console","fetchProgress","token","Authorization","completed","total"],"sources":["/Users/sachinkansal/seller-disclosure-portal/src/api.js"],"sourcesContent":["// src/api.js\nexport async function sendPromptToAI(prompt) {\n    try {\n      const response = await fetch('http://localhost:6000/api/disclosure/ai', { // backend URL\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt })\n      });\n  \n      if (!response.ok) throw new Error('AI response failed');\n      const data = await response.json();\n      return data.reply;\n    } catch (error) {\n      console.error(error);\n      return \"Sorry, I'm having trouble responding right now.\";\n    }\n  }\n  \n  export async function fetchProgress(token) {\n    try {\n      const response = await fetch('http://localhost:6000/api/disclosure/progress', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      if (!response.ok) throw new Error('Progress fetch failed');\n      return await response.json();\n    } catch (error) {\n      console.error(error);\n      return { completed: 0, total: 3 };\n    }\n  }\n  "],"mappings":"AAAA;AACA,OAAO,eAAeA,cAAcA,CAACC,MAAM,EAAE;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MAAE;MACxEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAO,CAAC;IACjC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvD,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,KAAK;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,iDAAiD;EAC1D;AACF;AAEA,OAAO,eAAeE,aAAaA,CAACC,KAAK,EAAE;EACzC,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;MAC5EE,OAAO,EAAE;QAAEa,aAAa,EAAE,UAAUD,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,IAAI,CAACf,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAO,MAAMR,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO;MAAEK,SAAS,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC;EACnC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}