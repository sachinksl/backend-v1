{"ast":null,"code":"// src/api.js\nexport async function sendPromptToAI(prompt) {\n  try {\n    const response = await fetch('/api/disclosure/ai', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        prompt\n      })\n    });\n    if (!response.ok) throw new Error('AI response failed');\n    const data = await response.json();\n    return data.reply; // backend now returns { reply }\n  } catch (error) {\n    console.error(error);\n    return \"Sorry, I'm having trouble responding right now.\";\n  }\n}\nexport async function fetchProgress(token) {\n  try {\n    // Token not required by backend; keep header only if you want it later\n    const response = await fetch('/api/disclosure/progress', {\n      credentials: 'include',\n      headers: token ? {\n        Authorization: `Bearer ${token}`\n      } : {}\n    });\n    if (!response.ok) throw new Error('Progress fetch failed');\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    return {\n      completed: 0,\n      total: 3\n    };\n  }\n}","map":{"version":3,"names":["sendPromptToAI","prompt","response","fetch","method","headers","credentials","body","JSON","stringify","ok","Error","data","json","reply","error","console","fetchProgress","token","Authorization","completed","total"],"sources":["/Users/sachinkansal/seller-disclosure-portal/src/api.js"],"sourcesContent":["// src/api.js\nexport async function sendPromptToAI(prompt) {\n  try {\n    const response = await fetch('/api/disclosure/ai', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'include',  \n      body: JSON.stringify({ prompt })\n    });\n    if (!response.ok) throw new Error('AI response failed');\n    const data = await response.json();\n    return data.reply; // backend now returns { reply }\n  } catch (error) {\n    console.error(error);\n    return \"Sorry, I'm having trouble responding right now.\";\n  }\n}\n\nexport async function fetchProgress(token) {\n  try {\n    // Token not required by backend; keep header only if you want it later\n    const response = await fetch('/api/disclosure/progress', {\n      credentials: 'include',  \n      headers: token ? { Authorization: `Bearer ${token}` } : {}\n    });\n    if (!response.ok) throw new Error('Progress fetch failed');\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    return { completed: 0, total: 3 };\n  }\n}\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,cAAcA,CAACC,MAAM,EAAE;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;MACjDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER;MAAO,CAAC;IACjC,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvD,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,KAAK,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,iDAAiD;EAC1D;AACF;AAEA,OAAO,eAAeE,aAAaA,CAACC,KAAK,EAAE;EACzC,IAAI;IACF;IACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0B,EAAE;MACvDG,WAAW,EAAE,SAAS;MACtBD,OAAO,EAAEa,KAAK,GAAG;QAAEC,aAAa,EAAE,UAAUD,KAAK;MAAG,CAAC,GAAG,CAAC;IAC3D,CAAC,CAAC;IACF,IAAI,CAAChB,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAO,MAAMT,QAAQ,CAACW,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO;MAAEK,SAAS,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC;EACnC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}