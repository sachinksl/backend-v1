{"ast":null,"code":"var _jsxFileName = \"/Users/sachinkansal/seller-disclosure-portal/src/components/DisclosureChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Typography, Paper, TextField, Button, List, ListItem, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisclosureChat({\n  sendPrompt\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Welcome! Let’s start with your property details. What is the address?'\n  }]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    const reply = await sendPrompt(input); // Expected to call backend AI API\n    const botMessage = {\n      sender: 'bot',\n      text: reply || \"I'm sorry, I didn't understand that.\"\n    };\n    setMessages(prev => [...prev, botMessage]);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxWidth: 600,\n    mx: \"auto\",\n    mt: 4,\n    p: 3,\n    boxShadow: 3,\n    borderRadius: 2,\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"70vh\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"AI-Guided Disclosure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      sx: {\n        flexGrow: 1,\n        overflowY: 'auto',\n        p: 2,\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            justifyContent: msg.sender === 'bot' ? 'flex-start' : 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: msg.text,\n            sx: {\n              maxWidth: '75%',\n              bgcolor: msg.sender === 'bot' ? 'primary.light' : 'secondary.light',\n              color: 'text.primary',\n              borderRadius: 2,\n              p: 1.5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: e => {\n        e.preventDefault();\n        handleSend();\n      },\n      display: \"flex\",\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        multiline: true,\n        maxRows: 4,\n        variant: \"outlined\",\n        placeholder: \"Type your answer here...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        color: \"primary\",\n        disabled: !input.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(DisclosureChat, \"1fpYV0eLjHqScuiC/O19Pdd+mWM=\");\n_c = DisclosureChat;\nexport default DisclosureChat;\nvar _c;\n$RefreshReg$(_c, \"DisclosureChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Typography","Paper","TextField","Button","List","ListItem","ListItemText","jsxDEV","_jsxDEV","DisclosureChat","sendPrompt","_s","messages","setMessages","sender","text","input","setInput","messagesEndRef","current","scrollIntoView","behavior","handleSend","trim","userMessage","prev","reply","botMessage","handleKeyPress","event","key","shiftKey","preventDefault","maxWidth","mx","mt","p","boxShadow","borderRadius","display","flexDirection","height","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","overflowY","mb","map","msg","idx","justifyContent","primary","bgcolor","color","ref","component","onSubmit","e","gap","multiline","maxRows","placeholder","value","onChange","target","onKeyPress","fullWidth","type","disabled","_c","$RefreshReg$"],"sources":["/Users/sachinkansal/seller-disclosure-portal/src/components/DisclosureChat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Box, Typography, Paper, TextField, Button, List, ListItem, ListItemText } from '@mui/material';\n\nfunction DisclosureChat({ sendPrompt }) {\n  const [messages, setMessages] = useState([\n    { sender: 'bot', text: 'Welcome! Let’s start with your property details. What is the address?' },\n  ]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { sender: 'user', text: input };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput('');\n\n    const reply = await sendPrompt(input); // Expected to call backend AI API\n    const botMessage = { sender: 'bot', text: reply || \"I'm sorry, I didn't understand that.\" };\n    setMessages((prev) => [...prev, botMessage]);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSend();\n    }\n  };\n\n  return (\n    <Box maxWidth={600} mx=\"auto\" mt={4} p={3} boxShadow={3} borderRadius={2} display=\"flex\" flexDirection=\"column\" height=\"70vh\">\n      <Typography variant=\"h5\" gutterBottom>\n        AI-Guided Disclosure\n      </Typography>\n\n      <Paper variant=\"outlined\" sx={{ flexGrow: 1, overflowY: 'auto', p: 2, mb: 2 }}>\n        <List>\n          {messages.map((msg, idx) => (\n            <ListItem key={idx} sx={{ justifyContent: msg.sender === 'bot' ? 'flex-start' : 'flex-end' }}>\n              <ListItemText\n                primary={msg.text}\n                sx={{\n                  maxWidth: '75%',\n                  bgcolor: msg.sender === 'bot' ? 'primary.light' : 'secondary.light',\n                  color: 'text.primary',\n                  borderRadius: 2,\n                  p: 1.5,\n                }}\n              />\n            </ListItem>\n          ))}\n          <div ref={messagesEndRef} />\n        </List>\n      </Paper>\n\n      <Box component=\"form\" onSubmit={(e) => { e.preventDefault(); handleSend(); }} display=\"flex\" gap={1}>\n        <TextField\n          multiline\n          maxRows={4}\n          variant=\"outlined\"\n          placeholder=\"Type your answer here...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          fullWidth\n        />\n        <Button variant=\"contained\" type=\"submit\" color=\"primary\" disabled={!input.trim()}>\n          Send\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nexport default DisclosureChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}